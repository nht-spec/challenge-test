{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport CurrentlyPlayingList from './CurrentlyPlayingList';\nimport SkeletonLoading from './SkeletonLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CurrentlyPlayingInfo(_ref) {\n  _s();\n\n  let {\n    width\n  } = _ref;\n  const {\n    loading,\n    currentPlayingList\n  } = useGetListCurrentlyPlaying(1);\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(SkeletonLoading, {\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 10\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentPlayingList === null || currentPlayingList === void 0 ? void 0 : currentPlayingList.map(current => /*#__PURE__*/_jsxDEV(CurrentlyPlayingList, {\n      current: current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this))\n  }, void 0, false);\n}\n\n_s(CurrentlyPlayingInfo, \"PEFDs2j54hwlYDgMfOPG09I2F2k=\", false, function () {\n  return [useGetListCurrentlyPlaying];\n});\n\n_c = CurrentlyPlayingInfo;\nexport default CurrentlyPlayingInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentlyPlayingInfo\");","map":{"version":3,"names":["React","useGetListCurrentlyPlaying","CurrentlyPlayingList","SkeletonLoading","CurrentlyPlayingInfo","width","loading","currentPlayingList","map","current"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingInfo.jsx"],"sourcesContent":["import React from 'react';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport CurrentlyPlayingList from './CurrentlyPlayingList';\nimport SkeletonLoading from './SkeletonLoading';\n\nfunction CurrentlyPlayingInfo({ width }) {\n\tconst { loading, currentPlayingList } = useGetListCurrentlyPlaying(1);\n\n\tif (loading) {\n\t\treturn <SkeletonLoading width={width} />;\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{currentPlayingList?.map((current) => (\n\t\t\t\t<CurrentlyPlayingList current={current} />\n\t\t\t))}\n\t\t</>\n\t);\n}\n\nexport default CurrentlyPlayingInfo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,0BAAP,MAAuC,wCAAvC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,SAASC,oBAAT,OAAyC;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EACxC,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAkCN,0BAA0B,CAAC,CAAD,CAAlE;;EAEA,IAAIK,OAAJ,EAAa;IACZ,oBAAO,QAAC,eAAD;MAAiB,KAAK,EAAED;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAP;EACA;;EAED,oBACC;IAAA,UACEE,kBADF,aACEA,kBADF,uBACEA,kBAAkB,CAAEC,GAApB,CAAyBC,OAAD,iBACxB,QAAC,oBAAD;MAAsB,OAAO,EAAEA;IAA/B;MAAA;MAAA;MAAA;IAAA,QADA;EADF,iBADD;AAOA;;GAdQL,oB;UACgCH,0B;;;KADhCG,oB;AAgBT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}