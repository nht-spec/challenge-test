{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/containers/CurrentlyPlaying/CurrentlyPlayingContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CurrentlyPlayingInfo from '../../components/CurrentlyPlaying/CurrentlyPlayingInfo';\nimport ResizeObserver from 'rc-resize-observer';\nimport PullToRefresh from 'react-simple-pull-to-refresh';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrentlyPlayingContainer(props) {\n  _s();\n\n  const [width, setWith] = useState(0);\n  const [val, setVal] = useState(false);\n  return /*#__PURE__*/_jsxDEV(PullToRefresh, {\n    onRefresh: () => new Promise(resolve => resolve(setVal(true))),\n    children: /*#__PURE__*/_jsxDEV(ResizeObserver, {\n      onResize: _ref => {\n        let {\n          width\n        } = _ref;\n        setWith(width);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(CurrentlyPlayingInfo, {\n          width: width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CurrentlyPlayingContainer, \"UxCM4xRxEnoiPbhwrU9NQ60y9E4=\");\n\n_c = CurrentlyPlayingContainer;\nexport default CurrentlyPlayingContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentlyPlayingContainer\");","map":{"version":3,"names":["React","useState","CurrentlyPlayingInfo","ResizeObserver","PullToRefresh","CurrentlyPlayingContainer","props","width","setWith","val","setVal","Promise","resolve"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/containers/CurrentlyPlaying/CurrentlyPlayingContainer.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport CurrentlyPlayingInfo from '../../components/CurrentlyPlaying/CurrentlyPlayingInfo';\nimport ResizeObserver from 'rc-resize-observer';\nimport PullToRefresh from 'react-simple-pull-to-refresh';\n\nfunction CurrentlyPlayingContainer(props) {\n\tconst [width, setWith] = useState(0);\n\tconst [val, setVal] = useState(false);\n\treturn (\n\t\t<PullToRefresh\n\t\t\tonRefresh={() => new Promise((resolve) => resolve(setVal(true)))}\n\t\t>\n\t\t\t<ResizeObserver\n\t\t\t\tonResize={({ width }) => {\n\t\t\t\t\tsetWith(width);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div>\n\t\t\t\t\t<CurrentlyPlayingInfo width={width} />\n\t\t\t\t</div>\n\t\t\t</ResizeObserver>\n\t\t</PullToRefresh>\n\t);\n}\n\nexport default CurrentlyPlayingContainer;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,oBAAP,MAAiC,wDAAjC;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAOC,aAAP,MAA0B,8BAA1B;;;AAEA,SAASC,yBAAT,CAAmCC,KAAnC,EAA0C;EAAA;;EACzC,MAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBP,QAAQ,CAAC,CAAD,CAAjC;EACA,MAAM,CAACQ,GAAD,EAAMC,MAAN,IAAgBT,QAAQ,CAAC,KAAD,CAA9B;EACA,oBACC,QAAC,aAAD;IACC,SAAS,EAAE,MAAM,IAAIU,OAAJ,CAAaC,OAAD,IAAaA,OAAO,CAACF,MAAM,CAAC,IAAD,CAAP,CAAhC,CADlB;IAAA,uBAGC,QAAC,cAAD;MACC,QAAQ,EAAE,QAAe;QAAA,IAAd;UAAEH;QAAF,CAAc;QACxBC,OAAO,CAACD,KAAD,CAAP;MACA,CAHF;MAAA,uBAKC;QAAA,uBACC,QAAC,oBAAD;UAAsB,KAAK,EAAEA;QAA7B;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IALD;MAAA;MAAA;MAAA;IAAA;EAHD;IAAA;IAAA;IAAA;EAAA,QADD;AAeA;;GAlBQF,yB;;KAAAA,yB;AAoBT,eAAeA,yBAAf"},"metadata":{},"sourceType":"module"}