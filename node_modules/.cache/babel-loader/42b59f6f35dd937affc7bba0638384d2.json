{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { Pagination } from 'antd';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { API_KEY } from '../../constants/api-keys';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport useGetView from '../../hooks/useGetView';\nimport useSearch from '../../hooks/useSearch';\nimport ListViewTest from '../shared/ListViewTest';\nimport LoadingGridView from '../shared/LoadingGridView';\nimport LoadingListView from '../shared/LoadingListView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CurrentlyPlayingInfo(_ref) {\n  _s();\n\n  let {\n    width\n  } = _ref;\n  const [current, setCurrent] = useState(1);\n  const navigate = useNavigate(); //Get current of view mode\n\n  const {\n    view\n  } = useGetView(); //Get search key word for call api search\n\n  const {\n    search\n  } = useSearch(); //Call api currently playing\n\n  const {\n    loading,\n    currentPlayingList\n  } = useGetListCurrentlyPlaying(current, search); //render loading skeleton\n  // if (loading && !view) {\n  // \treturn <LoadingListView width={width} />;\n  // }\n  // if (loading && view) {\n  // \treturn <LoadingGridView />;\n  // }\n  //Change current pagination\n\n  const onChange = page => {\n    setCurrent(page);\n    window.scrollTo(0, 0);\n  }; //Navigate to detail page\n\n\n  const onClick = item => {\n    navigate(`/now-playing/${item}`);\n  }; // const imgurl = API_KEY.IMAGE_URL;\n\n\n  const test = async () => {\n    const result = await axios.get('https://jsonplaceholder.typicode.com/photos');\n    return result;\n  };\n\n  console.log(test());\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-currently-list-top\",\n      responsive: true,\n      showSizeChanger: false,\n      current: current,\n      onChange: onChange,\n      total: currentPlayingList === null || currentPlayingList === void 0 ? void 0 : currentPlayingList.total_pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-currently-list-bottom\",\n      responsive: true,\n      showSizeChanger: false,\n      current: current,\n      onChange: onChange,\n      total: currentPlayingList === null || currentPlayingList === void 0 ? void 0 : currentPlayingList.total_pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CurrentlyPlayingInfo, \"REqGqOF6mkLxNpDErAOft4bCrOU=\", false, function () {\n  return [useNavigate, useGetView, useSearch, useGetListCurrentlyPlaying];\n});\n\n_c = CurrentlyPlayingInfo;\nexport default CurrentlyPlayingInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentlyPlayingInfo\");","map":{"version":3,"names":["Pagination","axios","React","useState","useNavigate","API_KEY","useGetListCurrentlyPlaying","useGetView","useSearch","ListViewTest","LoadingGridView","LoadingListView","CurrentlyPlayingInfo","width","current","setCurrent","navigate","view","search","loading","currentPlayingList","onChange","page","window","scrollTo","onClick","item","test","result","get","console","log","total_pages"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingInfo.jsx"],"sourcesContent":["import { Pagination } from 'antd';\nimport axios from 'axios';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { API_KEY } from '../../constants/api-keys';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport useGetView from '../../hooks/useGetView';\nimport useSearch from '../../hooks/useSearch';\nimport ListViewTest from '../shared/ListViewTest';\nimport LoadingGridView from '../shared/LoadingGridView';\nimport LoadingListView from '../shared/LoadingListView';\n\nfunction CurrentlyPlayingInfo({ width }) {\n\tconst [current, setCurrent] = useState(1);\n\tconst navigate = useNavigate();\n\n\t//Get current of view mode\n\tconst { view } = useGetView();\n\n\t//Get search key word for call api search\n\tconst { search } = useSearch();\n\n\t//Call api currently playing\n\tconst { loading, currentPlayingList } = useGetListCurrentlyPlaying(\n\t\tcurrent,\n\t\tsearch\n\t);\n\n\t//render loading skeleton\n\t// if (loading && !view) {\n\t// \treturn <LoadingListView width={width} />;\n\t// }\n\t// if (loading && view) {\n\t// \treturn <LoadingGridView />;\n\t// }\n\n\t//Change current pagination\n\tconst onChange = (page) => {\n\t\tsetCurrent(page);\n\t\twindow.scrollTo(0, 0);\n\t};\n\n\t//Navigate to detail page\n\tconst onClick = (item) => {\n\t\tnavigate(`/now-playing/${item}`);\n\t};\n\n\t// const imgurl = API_KEY.IMAGE_URL;\n\n\tconst test = async () => {\n\t\tconst result = await axios.get(\n\t\t\t'https://jsonplaceholder.typicode.com/photos'\n\t\t);\n\t\treturn result;\n\t};\n\n\tconsole.log(test());\n\n\treturn (\n\t\t<>\n\t\t\t<Pagination\n\t\t\t\tclassName='pagination-currently-list-top'\n\t\t\t\tresponsive={true}\n\t\t\t\tshowSizeChanger={false}\n\t\t\t\tcurrent={current}\n\t\t\t\tonChange={onChange}\n\t\t\t\ttotal={currentPlayingList?.total_pages}\n\t\t\t/>\n\n\t\t\t{/* {test?.map((movie) => (\n\t\t\t\t<ListViewTest current={movie} />\n\t\t\t))} */}\n\n\t\t\t{/* {!view ? (\n\t\t\t\t<ListViewTest\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tcurrent={currentPlayingList.results}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<GridView\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tcurrent={currentPlayingList.results}\n\t\t\t\t/>\n\t\t\t)} */}\n\n\t\t\t<Pagination\n\t\t\t\tclassName='pagination-currently-list-bottom'\n\t\t\t\tresponsive={true}\n\t\t\t\tshowSizeChanger={false}\n\t\t\t\tcurrent={current}\n\t\t\t\tonChange={onChange}\n\t\t\t\ttotal={currentPlayingList?.total_pages}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default CurrentlyPlayingInfo;\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,0BAAP,MAAuC,wCAAvC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;;AAEA,SAASC,oBAAT,OAAyC;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EACxC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAMa,QAAQ,GAAGZ,WAAW,EAA5B,CAFwC,CAIxC;;EACA,MAAM;IAAEa;EAAF,IAAWV,UAAU,EAA3B,CALwC,CAOxC;;EACA,MAAM;IAAEW;EAAF,IAAaV,SAAS,EAA5B,CARwC,CAUxC;;EACA,MAAM;IAAEW,OAAF;IAAWC;EAAX,IAAkCd,0BAA0B,CACjEQ,OADiE,EAEjEI,MAFiE,CAAlE,CAXwC,CAgBxC;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,MAAMG,QAAQ,GAAIC,IAAD,IAAU;IAC1BP,UAAU,CAACO,IAAD,CAAV;IACAC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;EACA,CAHD,CAzBwC,CA8BxC;;;EACA,MAAMC,OAAO,GAAIC,IAAD,IAAU;IACzBV,QAAQ,CAAE,gBAAeU,IAAK,EAAtB,CAAR;EACA,CAFD,CA/BwC,CAmCxC;;;EAEA,MAAMC,IAAI,GAAG,YAAY;IACxB,MAAMC,MAAM,GAAG,MAAM3B,KAAK,CAAC4B,GAAN,CACpB,6CADoB,CAArB;IAGA,OAAOD,MAAP;EACA,CALD;;EAOAE,OAAO,CAACC,GAAR,CAAYJ,IAAI,EAAhB;EAEA,oBACC;IAAA,wBACC,QAAC,UAAD;MACC,SAAS,EAAC,+BADX;MAEC,UAAU,EAAE,IAFb;MAGC,eAAe,EAAE,KAHlB;MAIC,OAAO,EAAEb,OAJV;MAKC,QAAQ,EAAEO,QALX;MAMC,KAAK,EAAED,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEY;IAN5B;MAAA;MAAA;MAAA;IAAA,QADD,eA4BC,QAAC,UAAD;MACC,SAAS,EAAC,kCADX;MAEC,UAAU,EAAE,IAFb;MAGC,eAAe,EAAE,KAHlB;MAIC,OAAO,EAAElB,OAJV;MAKC,QAAQ,EAAEO,QALX;MAMC,KAAK,EAAED,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEY;IAN5B;MAAA;MAAA;MAAA;IAAA,QA5BD;EAAA,gBADD;AAuCA;;GArFQpB,oB;UAESR,W,EAGAG,U,EAGEC,S,EAGqBF,0B;;;KAXhCM,oB;AAuFT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}