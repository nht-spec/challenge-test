{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport { Avatar, Divider, List, Skeleton } from 'antd';\nimport { API_KEY } from '../../constants/api-keys';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrentlyPlayingList(props) {\n  _s();\n\n  var _currentPlayingList$r, _currentPlayingList$r2;\n\n  // const [loading, setLoading] = useState(false);\n  const {\n    loading,\n    currentPlayingList\n  } = useGetListCurrentlyPlaying(1);\n\n  const loadMoreData = () => {\n    if (loading) {\n      return;\n    }\n  };\n\n  useEffect(() => {\n    loadMoreData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n    dataLength: (_currentPlayingList$r = currentPlayingList.results) === null || _currentPlayingList$r === void 0 ? void 0 : _currentPlayingList$r.length,\n    next: loadMoreData,\n    hasMore: ((_currentPlayingList$r2 = currentPlayingList.results) === null || _currentPlayingList$r2 === void 0 ? void 0 : _currentPlayingList$r2.length) < 50,\n    loader: /*#__PURE__*/_jsxDEV(Skeleton, {\n      avatar: true,\n      paragraph: {\n        rows: 1\n      },\n      active: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this),\n    endMessage: /*#__PURE__*/_jsxDEV(Divider, {\n      plain: true,\n      children: \"It is all, nothing more \\uD83E\\uDD10\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this),\n    scrollableTarget: \"scrollableDiv\",\n    children: /*#__PURE__*/_jsxDEV(List, {\n      itemLayout: \"horizontal\",\n      dataSource: currentPlayingList === null || currentPlayingList === void 0 ? void 0 : currentPlayingList.results,\n      renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            shape: \"square\",\n            size: {\n              xs: 24,\n              sm: 200,\n              md: 200,\n              lg: 200,\n              xl: 250,\n              xxl: 100\n            },\n            src: `${API_KEY.IMAGE_URL + item.poster_path}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 9\n          }, this),\n          title: item.title,\n          description: item.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CurrentlyPlayingList, \"Nv4eTgruP/p5DBvrDjoxC8dSkk8=\", false, function () {\n  return [useGetListCurrentlyPlaying];\n});\n\n_c = CurrentlyPlayingList;\nexport default CurrentlyPlayingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentlyPlayingList\");","map":{"version":3,"names":["React","useEffect","useGetListCurrentlyPlaying","Avatar","Divider","List","Skeleton","API_KEY","InfiniteScroll","CurrentlyPlayingList","props","loading","currentPlayingList","loadMoreData","results","length","rows","item","xs","sm","md","lg","xl","xxl","IMAGE_URL","poster_path","title","release_date"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingList.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport { Avatar, Divider, List, Skeleton } from 'antd';\nimport { API_KEY } from '../../constants/api-keys';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nfunction CurrentlyPlayingList(props) {\n\t// const [loading, setLoading] = useState(false);\n\tconst { loading, currentPlayingList } = useGetListCurrentlyPlaying(1);\n\n\tconst loadMoreData = () => {\n\t\tif (loading) {\n\t\t\treturn;\n\t\t}\n\t};\n\n\tuseEffect(() => {\n\t\tloadMoreData();\n\t}, []);\n\n\treturn (\n\t\t<InfiniteScroll\n\t\t\tdataLength={currentPlayingList.results?.length}\n\t\t\tnext={loadMoreData}\n\t\t\thasMore={currentPlayingList.results?.length < 50}\n\t\t\tloader={\n\t\t\t\t<Skeleton\n\t\t\t\t\tavatar\n\t\t\t\t\tparagraph={{\n\t\t\t\t\t\trows: 1,\n\t\t\t\t\t}}\n\t\t\t\t\tactive\n\t\t\t\t/>\n\t\t\t}\n\t\t\tendMessage={<Divider plain>It is all, nothing more ü§ê</Divider>}\n\t\t\tscrollableTarget='scrollableDiv'\n\t\t>\n\t\t\t<List\n\t\t\t\titemLayout='horizontal'\n\t\t\t\tdataSource={currentPlayingList?.results}\n\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\tavatar={\n\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\tshape='square'\n\t\t\t\t\t\t\t\t\tsize={{\n\t\t\t\t\t\t\t\t\t\txs: 24,\n\t\t\t\t\t\t\t\t\t\tsm: 200,\n\t\t\t\t\t\t\t\t\t\tmd: 200,\n\t\t\t\t\t\t\t\t\t\tlg: 200,\n\t\t\t\t\t\t\t\t\t\txl: 250,\n\t\t\t\t\t\t\t\t\t\txxl: 100,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tsrc={`${API_KEY.IMAGE_URL + item.poster_path}`}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttitle={item.title}\n\t\t\t\t\t\t\tdescription={item.release_date}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</List.Item>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</InfiniteScroll>\n\t);\n}\n\nexport default CurrentlyPlayingList;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,0BAAP,MAAuC,wCAAvC;AACA,SAASC,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,QAAhC,QAAgD,MAAhD;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;;AAEA,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;EAAA;;EAAA;;EACpC;EACA,MAAM;IAAEC,OAAF;IAAWC;EAAX,IAAkCV,0BAA0B,CAAC,CAAD,CAAlE;;EAEA,MAAMW,YAAY,GAAG,MAAM;IAC1B,IAAIF,OAAJ,EAAa;MACZ;IACA;EACD,CAJD;;EAMAV,SAAS,CAAC,MAAM;IACfY,YAAY;EACZ,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACC,QAAC,cAAD;IACC,UAAU,2BAAED,kBAAkB,CAACE,OAArB,0DAAE,sBAA4BC,MADzC;IAEC,IAAI,EAAEF,YAFP;IAGC,OAAO,EAAE,2BAAAD,kBAAkB,CAACE,OAAnB,kFAA4BC,MAA5B,IAAqC,EAH/C;IAIC,MAAM,eACL,QAAC,QAAD;MACC,MAAM,MADP;MAEC,SAAS,EAAE;QACVC,IAAI,EAAE;MADI,CAFZ;MAKC,MAAM;IALP;MAAA;MAAA;MAAA;IAAA,QALF;IAaC,UAAU,eAAE,QAAC,OAAD;MAAS,KAAK,MAAd;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAbb;IAcC,gBAAgB,EAAC,eAdlB;IAAA,uBAgBC,QAAC,IAAD;MACC,UAAU,EAAC,YADZ;MAEC,UAAU,EAAEJ,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEE,OAFjC;MAGC,UAAU,EAAGG,IAAD,iBACX,QAAC,IAAD,CAAM,IAAN;QAAA,uBACC,QAAC,IAAD,CAAM,IAAN,CAAW,IAAX;UACC,MAAM,eACL,QAAC,MAAD;YACC,KAAK,EAAC,QADP;YAEC,IAAI,EAAE;cACLC,EAAE,EAAE,EADC;cAELC,EAAE,EAAE,GAFC;cAGLC,EAAE,EAAE,GAHC;cAILC,EAAE,EAAE,GAJC;cAKLC,EAAE,EAAE,GALC;cAMLC,GAAG,EAAE;YANA,CAFP;YAUC,GAAG,EAAG,GAAEhB,OAAO,CAACiB,SAAR,GAAoBP,IAAI,CAACQ,WAAY;UAV9C;YAAA;YAAA;YAAA;UAAA,QAFF;UAeC,KAAK,EAAER,IAAI,CAACS,KAfb;UAgBC,WAAW,EAAET,IAAI,CAACU;QAhBnB;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IAJF;MAAA;MAAA;MAAA;IAAA;EAhBD;IAAA;IAAA;IAAA;EAAA,QADD;AA6CA;;GA3DQlB,oB;UAEgCP,0B;;;KAFhCO,oB;AA6DT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}