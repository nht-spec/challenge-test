{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/shared/ListViewTest.jsx\",\n    _s = $RefreshSig$();\n\nimport { Row } from 'antd';\nimport React, { useEffect, useRef } from 'react';\nimport { API_KEY } from '../../constants/api-keys';\nimport LazyLoadImg from '../LazyLoad/LazyLoadImg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ListViewTest(_ref) {\n  _s();\n\n  let {\n    current,\n    test\n  } = _ref;\n  // console.log(current);\n  const imgRef = useRef();\n  useEffect(() => {\n    const img = imgRef.current;\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        img.setAttribute('src', test);\n        img.classList.add('active');\n      }\n    });\n    if (img) observer.observe(img);\n    return () => {\n      if (img) observer.unobserve(img);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: test,\n      ref: imgRef,\n      className: \"lazy-load\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ListViewTest, \"yH8mEGw9zDQgg3u40vY4RuXceis=\");\n\n_c = ListViewTest;\nexport default ListViewTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListViewTest\");","map":{"version":3,"names":["Row","React","useEffect","useRef","API_KEY","LazyLoadImg","ListViewTest","current","test","imgRef","img","observer","IntersectionObserver","entries","isIntersecting","setAttribute","classList","add","observe","unobserve"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/shared/ListViewTest.jsx"],"sourcesContent":["import { Row } from 'antd';\nimport React, { useEffect, useRef } from 'react';\nimport { API_KEY } from '../../constants/api-keys';\nimport LazyLoadImg from '../LazyLoad/LazyLoadImg';\n\nfunction ListViewTest({ current, test }) {\n\t// console.log(current);\n\tconst imgRef = useRef();\n\tuseEffect(() => {\n\t\tconst img = imgRef.current;\n\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tif (entries[0].isIntersecting) {\n\t\t\t\timg.setAttribute('src', test);\n\t\t\t\timg.classList.add('active');\n\t\t\t}\n\t\t});\n\n\t\tif (img) observer.observe(img);\n\n\t\treturn () => {\n\t\t\tif (img) observer.unobserve(img);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<Row>\n\t\t\t{/* {current?.map((movie) => (\n\t\t\t\t<div key={movie.id}>\n\t\t\t\t</div>\n\t\t\t))} */}\n\t\t\t<img alt={test} ref={imgRef} className='lazy-load' />\n\t\t\t{/* <LazyLoadImg url={test != undefined ? test : []} /> */}\n\t\t</Row>\n\t);\n}\n\nexport default ListViewTest;\n"],"mappings":";;;AAAA,SAASA,GAAT,QAAoB,MAApB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,SAASC,YAAT,OAAyC;EAAA;;EAAA,IAAnB;IAAEC,OAAF;IAAWC;EAAX,CAAmB;EACxC;EACA,MAAMC,MAAM,GAAGN,MAAM,EAArB;EACAD,SAAS,CAAC,MAAM;IACf,MAAMQ,GAAG,GAAGD,MAAM,CAACF,OAAnB;IAEA,MAAMI,QAAQ,GAAG,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;MACtD,IAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAf,EAA+B;QAC9BJ,GAAG,CAACK,YAAJ,CAAiB,KAAjB,EAAwBP,IAAxB;QACAE,GAAG,CAACM,SAAJ,CAAcC,GAAd,CAAkB,QAAlB;MACA;IACD,CALgB,CAAjB;IAOA,IAAIP,GAAJ,EAASC,QAAQ,CAACO,OAAT,CAAiBR,GAAjB;IAET,OAAO,MAAM;MACZ,IAAIA,GAAJ,EAASC,QAAQ,CAACQ,SAAT,CAAmBT,GAAnB;IACT,CAFD;EAGA,CAfQ,EAeN,EAfM,CAAT;EAiBA,oBACC,QAAC,GAAD;IAAA,uBAKC;MAAK,GAAG,EAAEF,IAAV;MAAgB,GAAG,EAAEC,MAArB;MAA6B,SAAS,EAAC;IAAvC;MAAA;MAAA;MAAA;IAAA;EALD;IAAA;IAAA;IAAA;EAAA,QADD;AAUA;;GA9BQH,Y;;KAAAA,Y;AAgCT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}