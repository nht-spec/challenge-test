{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nconst VIEW_MODE = 'list-mode';\n\nconst getViewMode = () => JSON.parse(localStorage.getItem(VIEW_MODE)) || false;\n\nexport const useView = () => {\n  _s();\n\n  const [viewMode, setViewMode] = useState(getViewMode);\n  useEffect(() => {\n    const initialValue = getViewMode();\n\n    if (initialValue !== viewMode) {\n      localStorage.setItem(VIEW_MODE, viewMode); // window.location.reload();\n    }\n  }, [viewMode]);\n  return [viewMode, setViewMode];\n};\n\n_s(useView, \"7htgZLoNdA4TOLjCx3z3qI9a6Gs=\");","map":{"version":3,"names":["useEffect","useState","VIEW_MODE","getViewMode","JSON","parse","localStorage","getItem","useView","viewMode","setViewMode","initialValue","setItem"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/hooks/useView.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nconst VIEW_MODE = 'list-mode';\n\nconst getViewMode = () => JSON.parse(localStorage.getItem(VIEW_MODE)) || false;\n\nexport const useView = () => {\n\tconst [viewMode, setViewMode] = useState(getViewMode);\n\n\tuseEffect(() => {\n\t\tconst initialValue = getViewMode();\n\t\tif (initialValue !== viewMode) {\n\t\t\tlocalStorage.setItem(VIEW_MODE, viewMode);\n\t\t\t// window.location.reload();\n\t\t}\n\t}, [viewMode]);\n\n\treturn [viewMode, setViewMode];\n};\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,SAAS,GAAG,WAAlB;;AAEA,MAAMC,WAAW,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,SAArB,CAAX,KAA+C,KAAzE;;AAEA,OAAO,MAAMM,OAAO,GAAG,MAAM;EAAA;;EAC5B,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACE,WAAD,CAAxC;EAEAH,SAAS,CAAC,MAAM;IACf,MAAMW,YAAY,GAAGR,WAAW,EAAhC;;IACA,IAAIQ,YAAY,KAAKF,QAArB,EAA+B;MAC9BH,YAAY,CAACM,OAAb,CAAqBV,SAArB,EAAgCO,QAAhC,EAD8B,CAE9B;IACA;EACD,CANQ,EAMN,CAACA,QAAD,CANM,CAAT;EAQA,OAAO,CAACA,QAAD,EAAWC,WAAX,CAAP;AACA,CAZM;;GAAMF,O"},"metadata":{},"sourceType":"module"}