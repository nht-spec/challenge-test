{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/SkeletonLoading.jsx\";\nimport { Card, List, Skeleton } from 'antd';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SkeletonLoading(_ref) {\n  let {\n    width\n  } = _ref;\n  const emptyArray = new Array(20).fill(null).map((_, index) => {\n    const key = index + 1;\n    return {\n      key\n    };\n  });\n\n  if (width < 500) {\n    return /*#__PURE__*/_jsxDEV(List, {\n      dataSource: emptyArray,\n      renderItem: () => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            width: '100%'\n          },\n          cover: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../../assets/images/loadingImage.png')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            active: true,\n            paragraph: {\n              rows: 3\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: width > 500 && /*#__PURE__*/_jsxDEV(List, {\n      dataSource: emptyArray,\n      renderItem: () => /*#__PURE__*/_jsxDEV(List.Item, {\n        children: [/*#__PURE__*/_jsxDEV(Skeleton.Avatar, {\n          className: \"skeleton-avatar\",\n          shape: \"square\",\n          active: true,\n          size: width > 672 ? 200 : 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n          active: true,\n          paragraph: {\n            rows: 3\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_c = SkeletonLoading;\nexport default SkeletonLoading;\n\nvar _c;\n\n$RefreshReg$(_c, \"SkeletonLoading\");","map":{"version":3,"names":["Card","List","Skeleton","React","SkeletonLoading","width","emptyArray","Array","fill","map","_","index","key","require","rows"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/SkeletonLoading.jsx"],"sourcesContent":["import { Card, List, Skeleton } from 'antd';\nimport React from 'react';\n\nfunction SkeletonLoading({ width }) {\n\tconst emptyArray = new Array(20).fill(null).map((_, index) => {\n\t\tconst key = index + 1;\n\t\treturn {\n\t\t\tkey,\n\t\t};\n\t});\n\n\tif (width < 500) {\n\t\treturn (\n\t\t\t<List\n\t\t\t\tdataSource={emptyArray}\n\t\t\t\trenderItem={() => (\n\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t<Card\n\t\t\t\t\t\t\tstyle={{ width: '100%' }}\n\t\t\t\t\t\t\tcover={\n\t\t\t\t\t\t\t\t<img src={require('../../assets/images/loadingImage.png')} />\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Skeleton active={true} paragraph={{ rows: 3 }} />\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</List.Item>\n\t\t\t\t)}\n\t\t\t/>\n\t\t);\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t{width > 500 && (\n\t\t\t\t<List\n\t\t\t\t\tdataSource={emptyArray}\n\t\t\t\t\trenderItem={() => (\n\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t<Skeleton.Avatar\n\t\t\t\t\t\t\t\tclassName='skeleton-avatar'\n\t\t\t\t\t\t\t\tshape='square'\n\t\t\t\t\t\t\t\tactive={true}\n\t\t\t\t\t\t\t\tsize={width > 672 ? 200 : 150}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Skeleton active={true} paragraph={{ rows: 3 }} />\n\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n}\n\nexport default SkeletonLoading;\n"],"mappings":";AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,QAArB,QAAqC,MAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,eAAT,OAAoC;EAAA,IAAX;IAAEC;EAAF,CAAW;EACnC,MAAMC,UAAU,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmB,IAAnB,EAAyBC,GAAzB,CAA6B,CAACC,CAAD,EAAIC,KAAJ,KAAc;IAC7D,MAAMC,GAAG,GAAGD,KAAK,GAAG,CAApB;IACA,OAAO;MACNC;IADM,CAAP;EAGA,CALkB,CAAnB;;EAOA,IAAIP,KAAK,GAAG,GAAZ,EAAiB;IAChB,oBACC,QAAC,IAAD;MACC,UAAU,EAAEC,UADb;MAEC,UAAU,EAAE,mBACX,QAAC,IAAD,CAAM,IAAN;QAAA,uBACC,QAAC,IAAD;UACC,KAAK,EAAE;YAAED,KAAK,EAAE;UAAT,CADR;UAEC,KAAK,eACJ;YAAK,GAAG,EAAEQ,OAAO,CAAC,sCAAD;UAAjB;YAAA;YAAA;YAAA;UAAA,QAHF;UAAA,uBAMC,QAAC,QAAD;YAAU,MAAM,EAAE,IAAlB;YAAwB,SAAS,EAAE;cAAEC,IAAI,EAAE;YAAR;UAAnC;YAAA;YAAA;YAAA;UAAA;QAND;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IAHF;MAAA;MAAA;MAAA;IAAA,QADD;EAiBA;;EAED,oBACC;IAAA,UACET,KAAK,GAAG,GAAR,iBACA,QAAC,IAAD;MACC,UAAU,EAAEC,UADb;MAEC,UAAU,EAAE,mBACX,QAAC,IAAD,CAAM,IAAN;QAAA,wBACC,QAAC,QAAD,CAAU,MAAV;UACC,SAAS,EAAC,iBADX;UAEC,KAAK,EAAC,QAFP;UAGC,MAAM,EAAE,IAHT;UAIC,IAAI,EAAED,KAAK,GAAG,GAAR,GAAc,GAAd,GAAoB;QAJ3B;UAAA;UAAA;UAAA;QAAA,QADD,eAOC,QAAC,QAAD;UAAU,MAAM,EAAE,IAAlB;UAAwB,SAAS,EAAE;YAAES,IAAI,EAAE;UAAR;QAAnC;UAAA;UAAA;UAAA;QAAA,QAPD;MAAA;QAAA;QAAA;QAAA;MAAA;IAHF;MAAA;MAAA;MAAA;IAAA;EAFF,iBADD;AAoBA;;KAhDQV,e;AAkDT,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}