{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { Pagination, Row } from 'antd';\nimport React, { useState } from 'react';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport CurrentlyPlayingList from './CurrentlyPlayingList';\nimport SkeletonLoading from './SkeletonLoading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CurrentlyPlayingInfo(_ref) {\n  _s();\n\n  let {\n    width\n  } = _ref;\n  const [current, setCurrent] = useState(1);\n  const {\n    loading,\n    currentPlayingList\n  } = useGetListCurrentlyPlaying(current);\n\n  window.onbeforeunload = function () {\n    window.scrollTo(0, 0);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(SkeletonLoading, {\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }, this);\n  }\n\n  const onChange = page => {\n    setCurrent(page);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      responsive: true,\n      showSizeChanger: false,\n      current: current,\n      onChange: onChange,\n      total: currentPlayingList === null || currentPlayingList === void 0 ? void 0 : currentPlayingList.total_pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(CurrentlyPlayingList, {\n      width: width,\n      current: currentPlayingList.results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      responsive: true,\n      showSizeChanger: false,\n      current: current,\n      onChange: onChange,\n      total: currentPlayingList === null || currentPlayingList === void 0 ? void 0 : currentPlayingList.total_pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CurrentlyPlayingInfo, \"jPB0DfhUSwF03tIadkCCd2gcptw=\", false, function () {\n  return [useGetListCurrentlyPlaying];\n});\n\n_c = CurrentlyPlayingInfo;\nexport default CurrentlyPlayingInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentlyPlayingInfo\");","map":{"version":3,"names":["Pagination","Row","React","useState","useGetListCurrentlyPlaying","CurrentlyPlayingList","SkeletonLoading","CurrentlyPlayingInfo","width","current","setCurrent","loading","currentPlayingList","window","onbeforeunload","scrollTo","onChange","page","total_pages","results"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingInfo.jsx"],"sourcesContent":["import { Pagination, Row } from 'antd';\nimport React, { useState } from 'react';\nimport useGetListCurrentlyPlaying from '../../hooks/useGetListCurrentlyPlaying';\nimport CurrentlyPlayingList from './CurrentlyPlayingList';\nimport SkeletonLoading from './SkeletonLoading';\n\nfunction CurrentlyPlayingInfo({ width }) {\n\tconst [current, setCurrent] = useState(1);\n\tconst { loading, currentPlayingList } = useGetListCurrentlyPlaying(current);\n\twindow.onbeforeunload = function () {\n\t\twindow.scrollTo(0, 0);\n\t};\n\n\tif (loading) {\n\t\treturn <SkeletonLoading width={width} />;\n\t}\n\n\tconst onChange = (page) => {\n\t\tsetCurrent(page);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Pagination\n\t\t\t\tresponsive={true}\n\t\t\t\tshowSizeChanger={false}\n\t\t\t\tcurrent={current}\n\t\t\t\tonChange={onChange}\n\t\t\t\ttotal={currentPlayingList?.total_pages}\n\t\t\t/>\n\t\t\t<CurrentlyPlayingList\n\t\t\t\twidth={width}\n\t\t\t\tcurrent={currentPlayingList.results}\n\t\t\t/>\n\n\t\t\t<Pagination\n\t\t\t\tresponsive={true}\n\t\t\t\tshowSizeChanger={false}\n\t\t\t\tcurrent={current}\n\t\t\t\tonChange={onChange}\n\t\t\t\ttotal={currentPlayingList?.total_pages}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default CurrentlyPlayingInfo;\n"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,GAArB,QAAgC,MAAhC;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,0BAAP,MAAuC,wCAAvC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;;AAEA,SAASC,oBAAT,OAAyC;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EACxC,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAM;IAAEQ,OAAF;IAAWC;EAAX,IAAkCR,0BAA0B,CAACK,OAAD,CAAlE;;EACAI,MAAM,CAACC,cAAP,GAAwB,YAAY;IACnCD,MAAM,CAACE,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;EACA,CAFD;;EAIA,IAAIJ,OAAJ,EAAa;IACZ,oBAAO,QAAC,eAAD;MAAiB,KAAK,EAAEH;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAP;EACA;;EAED,MAAMQ,QAAQ,GAAIC,IAAD,IAAU;IAC1BP,UAAU,CAACO,IAAD,CAAV;EACA,CAFD;;EAIA,oBACC;IAAA,wBACC,QAAC,UAAD;MACC,UAAU,EAAE,IADb;MAEC,eAAe,EAAE,KAFlB;MAGC,OAAO,EAAER,OAHV;MAIC,QAAQ,EAAEO,QAJX;MAKC,KAAK,EAAEJ,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEM;IAL5B;MAAA;MAAA;MAAA;IAAA,QADD,eAQC,QAAC,oBAAD;MACC,KAAK,EAAEV,KADR;MAEC,OAAO,EAAEI,kBAAkB,CAACO;IAF7B;MAAA;MAAA;MAAA;IAAA,QARD,eAaC,QAAC,UAAD;MACC,UAAU,EAAE,IADb;MAEC,eAAe,EAAE,KAFlB;MAGC,OAAO,EAAEV,OAHV;MAIC,QAAQ,EAAEO,QAJX;MAKC,KAAK,EAAEJ,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEM;IAL5B;MAAA;MAAA;MAAA;IAAA,QAbD;EAAA,gBADD;AAuBA;;GAtCQX,oB;UAEgCH,0B;;;KAFhCG,oB;AAwCT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}