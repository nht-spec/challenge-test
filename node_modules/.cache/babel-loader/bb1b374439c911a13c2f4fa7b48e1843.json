{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { message } from 'antd';\nimport { useEffect, useState } from 'react';\nimport movieApi from '../api/movieApi';\nimport { API_KEY } from '../constants/api-keys';\n\nfunction useGetListCurrentlyPlaying(page, search) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [currentPlayingList, setCurrentPlayingList] = useState([]);\n  console.log(search);\n  useEffect(() => {\n    {\n      page != null && search.input != undefined(async () => {\n        setLoading(true);\n\n        try {\n          const result = await movieApi.getNowPlaying(page);\n          setCurrentPlayingList(result.data);\n        } catch (err) {\n          message.error(`${err}`);\n        }\n\n        setLoading(false);\n      })();\n    }\n  }, [page, search]);\n  return {\n    loading,\n    currentPlayingList\n  };\n}\n\n_s(useGetListCurrentlyPlaying, \"YD7LzbYy+kl2MCdf5IuZfQ7MAnM=\");\n\nexport default useGetListCurrentlyPlaying;","map":{"version":3,"names":["message","useEffect","useState","movieApi","API_KEY","useGetListCurrentlyPlaying","page","search","loading","setLoading","currentPlayingList","setCurrentPlayingList","console","log","input","undefined","result","getNowPlaying","data","err","error"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/hooks/useGetListCurrentlyPlaying.jsx"],"sourcesContent":["import { message } from 'antd';\nimport { useEffect, useState } from 'react';\nimport movieApi from '../api/movieApi';\nimport { API_KEY } from '../constants/api-keys';\n\nfunction useGetListCurrentlyPlaying(page, search) {\n\tconst [loading, setLoading] = useState(false);\n\tconst [currentPlayingList, setCurrentPlayingList] = useState([]);\n\n\tconsole.log(search);\n\n\tuseEffect(() => {\n\t\t{\n\t\t\tpage != null &&\n\t\t\t\tsearch.input !=\n\t\t\t\t\tundefined(async () => {\n\t\t\t\t\t\tsetLoading(true);\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst result = await movieApi.getNowPlaying(page);\n\t\t\t\t\t\t\tsetCurrentPlayingList(result.data);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tmessage.error(`${err}`);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t})();\n\t\t}\n\t}, [page, search]);\n\n\treturn {\n\t\tloading,\n\t\tcurrentPlayingList,\n\t};\n}\n\nexport default useGetListCurrentlyPlaying;\n"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,MAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,SAASC,0BAAT,CAAoCC,IAApC,EAA0CC,MAA1C,EAAkD;EAAA;;EACjD,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACQ,kBAAD,EAAqBC,qBAArB,IAA8CT,QAAQ,CAAC,EAAD,CAA5D;EAEAU,OAAO,CAACC,GAAR,CAAYN,MAAZ;EAEAN,SAAS,CAAC,MAAM;IACf;MACCK,IAAI,IAAI,IAAR,IACCC,MAAM,CAACO,KAAP,IACCC,SAAS,CAAC,YAAY;QACrBN,UAAU,CAAC,IAAD,CAAV;;QACA,IAAI;UACH,MAAMO,MAAM,GAAG,MAAMb,QAAQ,CAACc,aAAT,CAAuBX,IAAvB,CAArB;UACAK,qBAAqB,CAACK,MAAM,CAACE,IAAR,CAArB;QACA,CAHD,CAGE,OAAOC,GAAP,EAAY;UACbnB,OAAO,CAACoB,KAAR,CAAe,GAAED,GAAI,EAArB;QACA;;QAEDV,UAAU,CAAC,KAAD,CAAV;MACA,CAVQ,CAAT,EAFF;IAaA;EACD,CAhBQ,EAgBN,CAACH,IAAD,EAAOC,MAAP,CAhBM,CAAT;EAkBA,OAAO;IACNC,OADM;IAENE;EAFM,CAAP;AAIA;;GA5BQL,0B;;AA8BT,eAAeA,0BAAf"},"metadata":{},"sourceType":"module"}