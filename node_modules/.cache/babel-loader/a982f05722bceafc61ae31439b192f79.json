{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/TopRate/TopRateInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport { Pagination } from 'antd';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useGetTopRate from '../../hooks/useGetTopRate';\nimport useGetView from '../../hooks/useGetView';\nimport useSearch from '../../hooks/useSearch';\nimport GridView from '../shared/GridView';\nimport ListView from '../shared/ListView';\nimport ListViewTest from '../shared/ListViewTest';\nimport LoadingGridView from '../shared/LoadingGridView';\nimport LoadingListView from '../shared/LoadingListView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TopRateInfo(_ref) {\n  _s();\n\n  let {\n    width\n  } = _ref;\n  const [current, setCurrent] = useState(1);\n  const navigate = useNavigate(); //Get current of view mode\n\n  const {\n    view\n  } = useGetView(); //Get search key word for call api search\n\n  const {\n    search\n  } = useSearch(); //Call api top rate\n\n  const {\n    loading,\n    topRateList\n  } = useGetTopRate(current, search); //render loading skeleton\n\n  if (loading && !view) {\n    return /*#__PURE__*/_jsxDEV(LoadingListView, {\n      width: width\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }, this);\n  }\n\n  if (loading && view) {\n    return /*#__PURE__*/_jsxDEV(LoadingGridView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 10\n    }, this);\n  } //Change current pagination\n\n\n  const onChange = page => {\n    setCurrent(page);\n    window.scrollTo(0, 0);\n  }; //Navigate to detail page\n\n\n  const onClick = item => {\n    navigate(`/top-rated/${item}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-currently-list-top\",\n      responsive: true,\n      showSizeChanger: false,\n      current: current,\n      onChange: onChange,\n      total: topRateList === null || topRateList === void 0 ? void 0 : topRateList.total_pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), !view ? /*#__PURE__*/_jsxDEV(ListViewTest, {\n      onClick: onClick,\n      width: width,\n      current: topRateList.results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(GridView, {\n      onClick: onClick,\n      current: topRateList.results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      className: \"pagination-currently-list-bottom\",\n      responsive: true,\n      showSizeChanger: false,\n      current: current,\n      onChange: onChange,\n      total: topRateList === null || topRateList === void 0 ? void 0 : topRateList.total_pages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TopRateInfo, \"h88E5/PHaVcwrMRSjzzsWqH4nfk=\", false, function () {\n  return [useNavigate, useGetView, useSearch, useGetTopRate];\n});\n\n_c = TopRateInfo;\nexport default TopRateInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopRateInfo\");","map":{"version":3,"names":["Pagination","React","useState","useNavigate","useGetTopRate","useGetView","useSearch","GridView","ListView","ListViewTest","LoadingGridView","LoadingListView","TopRateInfo","width","current","setCurrent","navigate","view","search","loading","topRateList","onChange","page","window","scrollTo","onClick","item","total_pages","results"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/TopRate/TopRateInfo.jsx"],"sourcesContent":["import { Pagination } from 'antd';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useGetTopRate from '../../hooks/useGetTopRate';\nimport useGetView from '../../hooks/useGetView';\nimport useSearch from '../../hooks/useSearch';\nimport GridView from '../shared/GridView';\nimport ListView from '../shared/ListView';\nimport ListViewTest from '../shared/ListViewTest';\nimport LoadingGridView from '../shared/LoadingGridView';\nimport LoadingListView from '../shared/LoadingListView';\n\nfunction TopRateInfo({ width }) {\n\tconst [current, setCurrent] = useState(1);\n\tconst navigate = useNavigate();\n\n\t//Get current of view mode\n\tconst { view } = useGetView();\n\n\t//Get search key word for call api search\n\tconst { search } = useSearch();\n\n\t//Call api top rate\n\tconst { loading, topRateList } = useGetTopRate(current, search);\n\n\t//render loading skeleton\n\tif (loading && !view) {\n\t\treturn <LoadingListView width={width} />;\n\t}\n\tif (loading && view) {\n\t\treturn <LoadingGridView />;\n\t}\n\n\t//Change current pagination\n\tconst onChange = (page) => {\n\t\tsetCurrent(page);\n\t\twindow.scrollTo(0, 0);\n\t};\n\n\t//Navigate to detail page\n\tconst onClick = (item) => {\n\t\tnavigate(`/top-rated/${item}`);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Pagination\n\t\t\t\tclassName='pagination-currently-list-top'\n\t\t\t\tresponsive={true}\n\t\t\t\tshowSizeChanger={false}\n\t\t\t\tcurrent={current}\n\t\t\t\tonChange={onChange}\n\t\t\t\ttotal={topRateList?.total_pages}\n\t\t\t/>\n\n\t\t\t{!view ? (\n\t\t\t\t<ListViewTest\n\t\t\t\t\tonClick={onClick}\n\t\t\t\t\twidth={width}\n\t\t\t\t\tcurrent={topRateList.results}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<GridView onClick={onClick} current={topRateList.results} />\n\t\t\t)}\n\n\t\t\t<Pagination\n\t\t\t\tclassName='pagination-currently-list-bottom'\n\t\t\t\tresponsive={true}\n\t\t\t\tshowSizeChanger={false}\n\t\t\t\tcurrent={current}\n\t\t\t\tonChange={onChange}\n\t\t\t\ttotal={topRateList?.total_pages}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default TopRateInfo;\n"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,MAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;;AAEA,SAASC,WAAT,OAAgC;EAAA;;EAAA,IAAX;IAAEC;EAAF,CAAW;EAC/B,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,CAAD,CAAtC;EACA,MAAMc,QAAQ,GAAGb,WAAW,EAA5B,CAF+B,CAI/B;;EACA,MAAM;IAAEc;EAAF,IAAWZ,UAAU,EAA3B,CAL+B,CAO/B;;EACA,MAAM;IAAEa;EAAF,IAAaZ,SAAS,EAA5B,CAR+B,CAU/B;;EACA,MAAM;IAAEa,OAAF;IAAWC;EAAX,IAA2BhB,aAAa,CAACU,OAAD,EAAUI,MAAV,CAA9C,CAX+B,CAa/B;;EACA,IAAIC,OAAO,IAAI,CAACF,IAAhB,EAAsB;IACrB,oBAAO,QAAC,eAAD;MAAiB,KAAK,EAAEJ;IAAxB;MAAA;MAAA;MAAA;IAAA,QAAP;EACA;;EACD,IAAIM,OAAO,IAAIF,IAAf,EAAqB;IACpB,oBAAO,QAAC,eAAD;MAAA;MAAA;MAAA;IAAA,QAAP;EACA,CAnB8B,CAqB/B;;;EACA,MAAMI,QAAQ,GAAIC,IAAD,IAAU;IAC1BP,UAAU,CAACO,IAAD,CAAV;IACAC,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,CAAnB;EACA,CAHD,CAtB+B,CA2B/B;;;EACA,MAAMC,OAAO,GAAIC,IAAD,IAAU;IACzBV,QAAQ,CAAE,cAAaU,IAAK,EAApB,CAAR;EACA,CAFD;;EAIA,oBACC;IAAA,wBACC,QAAC,UAAD;MACC,SAAS,EAAC,+BADX;MAEC,UAAU,EAAE,IAFb;MAGC,eAAe,EAAE,KAHlB;MAIC,OAAO,EAAEZ,OAJV;MAKC,QAAQ,EAAEO,QALX;MAMC,KAAK,EAAED,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEO;IANrB;MAAA;MAAA;MAAA;IAAA,QADD,EAUE,CAACV,IAAD,gBACA,QAAC,YAAD;MACC,OAAO,EAAEQ,OADV;MAEC,KAAK,EAAEZ,KAFR;MAGC,OAAO,EAAEO,WAAW,CAACQ;IAHtB;MAAA;MAAA;MAAA;IAAA,QADA,gBAOA,QAAC,QAAD;MAAU,OAAO,EAAEH,OAAnB;MAA4B,OAAO,EAAEL,WAAW,CAACQ;IAAjD;MAAA;MAAA;MAAA;IAAA,QAjBF,eAoBC,QAAC,UAAD;MACC,SAAS,EAAC,kCADX;MAEC,UAAU,EAAE,IAFb;MAGC,eAAe,EAAE,KAHlB;MAIC,OAAO,EAAEd,OAJV;MAKC,QAAQ,EAAEO,QALX;MAMC,KAAK,EAAED,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEO;IANrB;MAAA;MAAA;MAAA;IAAA,QApBD;EAAA,gBADD;AA+BA;;GA/DQf,W;UAEST,W,EAGAE,U,EAGEC,S,EAGcF,a;;;KAXzBQ,W;AAiET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}