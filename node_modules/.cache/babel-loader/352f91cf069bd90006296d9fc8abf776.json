{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/shared/ListViewTest.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Col, List, Row, Space } from 'antd';\nimport { API_KEY } from '../../constants/api-keys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nListViewTest.propTypes = {};\n\nfunction ListViewTest(_ref) {\n  _s();\n\n  let {\n    onClick,\n    current\n  } = _ref;\n  const imgurl = API_KEY.IMAGE_URL; // console.log(current);\n\n  const imgRef = useRef();\n  useEffect(() => {\n    const img = imgRef.current;\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        img.setAttribute('src', img.alt);\n      }\n    });\n    if (img) observer.observe(img);\n    return () => {\n      if (img) observer.unobserve(img);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    children: current === null || current === void 0 ? void 0 : current.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: `${imgurl + movie.poster_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 6\n      }, this)\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ListViewTest, \"yH8mEGw9zDQgg3u40vY4RuXceis=\");\n\n_c = ListViewTest;\nexport default ListViewTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListViewTest\");","map":{"version":3,"names":["React","useEffect","useRef","PropTypes","Avatar","Col","List","Row","Space","API_KEY","ListViewTest","propTypes","onClick","current","imgurl","IMAGE_URL","imgRef","img","observer","IntersectionObserver","entries","isIntersecting","setAttribute","alt","observe","unobserve","map","movie","poster_path","id"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/shared/ListViewTest.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Avatar, Col, List, Row, Space } from 'antd';\nimport { API_KEY } from '../../constants/api-keys';\n\nListViewTest.propTypes = {};\n\nfunction ListViewTest({ onClick, current }) {\n\tconst imgurl = API_KEY.IMAGE_URL;\n\t// console.log(current);\n\tconst imgRef = useRef();\n\n\tuseEffect(() => {\n\t\tconst img = imgRef.current;\n\t\tconst observer = new IntersectionObserver((entries) => {\n\t\t\tif (entries[0].isIntersecting) {\n\t\t\t\timg.setAttribute('src', img.alt);\n\t\t\t}\n\t\t});\n\n\t\tif (img) observer.observe(img);\n\n\t\treturn () => {\n\t\t\tif (img) observer.unobserve(img);\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<Row>\n\t\t\t{current?.map((movie) => (\n\t\t\t\t<div key={movie.id}>\n\t\t\t\t\t<img alt={`${imgurl + movie.poster_path}`} />\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</Row>\n\t);\n}\n\nexport default ListViewTest;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,MAAT,EAAiBC,GAAjB,EAAsBC,IAAtB,EAA4BC,GAA5B,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEAC,YAAY,CAACC,SAAb,GAAyB,EAAzB;;AAEA,SAASD,YAAT,OAA4C;EAAA;;EAAA,IAAtB;IAAEE,OAAF;IAAWC;EAAX,CAAsB;EAC3C,MAAMC,MAAM,GAAGL,OAAO,CAACM,SAAvB,CAD2C,CAE3C;;EACA,MAAMC,MAAM,GAAGd,MAAM,EAArB;EAEAD,SAAS,CAAC,MAAM;IACf,MAAMgB,GAAG,GAAGD,MAAM,CAACH,OAAnB;IACA,MAAMK,QAAQ,GAAG,IAAIC,oBAAJ,CAA0BC,OAAD,IAAa;MACtD,IAAIA,OAAO,CAAC,CAAD,CAAP,CAAWC,cAAf,EAA+B;QAC9BJ,GAAG,CAACK,YAAJ,CAAiB,KAAjB,EAAwBL,GAAG,CAACM,GAA5B;MACA;IACD,CAJgB,CAAjB;IAMA,IAAIN,GAAJ,EAASC,QAAQ,CAACM,OAAT,CAAiBP,GAAjB;IAET,OAAO,MAAM;MACZ,IAAIA,GAAJ,EAASC,QAAQ,CAACO,SAAT,CAAmBR,GAAnB;IACT,CAFD;EAGA,CAbQ,EAaN,EAbM,CAAT;EAeA,oBACC,QAAC,GAAD;IAAA,UACEJ,OADF,aACEA,OADF,uBACEA,OAAO,CAAEa,GAAT,CAAcC,KAAD,iBACb;MAAA,uBACC;QAAK,GAAG,EAAG,GAAEb,MAAM,GAAGa,KAAK,CAACC,WAAY;MAAxC;QAAA;QAAA;QAAA;MAAA;IADD,GAAUD,KAAK,CAACE,EAAhB;MAAA;MAAA;MAAA;IAAA,QADA;EADF;IAAA;IAAA;IAAA;EAAA,QADD;AASA;;GA7BQnB,Y;;KAAAA,Y;AA+BT,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}