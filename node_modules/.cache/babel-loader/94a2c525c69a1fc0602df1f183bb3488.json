{"ast":null,"code":"var _jsxFileName = \"/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingList.jsx\";\nimport { Avatar, Divider, List, Space, Tag, Typography } from 'antd';\nimport React from 'react';\nimport { API_KEY } from '../../constants/api-keys';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CurrentlyPlayingList(_ref) {\n  let {\n    current\n  } = _ref;\n  const {\n    Title,\n    Text\n  } = Typography;\n  const imgUrl = API_KEY.IMAGE_URL;\n  return /*#__PURE__*/_jsxDEV(List, {\n    itemLayout: \"horizontal\",\n    size: \"large\",\n    dataSource: current,\n    renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: \"movie-poster\",\n        shape: \"square\",\n        size: 200,\n        src: `${imgUrl + item.poster_path}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Title, {\n        level: 3,\n        children: [\" \", item.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        size: [6, 6],\n        wrap: true,\n        split: /*#__PURE__*/_jsxDEV(Divider, {\n          type: \"vertical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 39\n        }, this),\n        children: [/*#__PURE__*/_jsxDEV(Tag, {\n          color: \"red\",\n          children: item.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"red\",\n          children: item.vote_average\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Tag, {\n          color: \"red\",\n          children: item.vote_count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n}\n\n_c = CurrentlyPlayingList;\nexport default CurrentlyPlayingList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentlyPlayingList\");","map":{"version":3,"names":["Avatar","Divider","List","Space","Tag","Typography","React","API_KEY","CurrentlyPlayingList","current","Title","Text","imgUrl","IMAGE_URL","item","poster_path","title","release_date","vote_average","vote_count"],"sources":["/Users/thinhnguyen/challenge/movie-project/src/components/CurrentlyPlaying/CurrentlyPlayingList.jsx"],"sourcesContent":["import { Avatar, Divider, List, Space, Tag, Typography } from 'antd';\nimport React from 'react';\nimport { API_KEY } from '../../constants/api-keys';\n\nfunction CurrentlyPlayingList({ current }) {\n\tconst { Title, Text } = Typography;\n\tconst imgUrl = API_KEY.IMAGE_URL;\n\n\treturn (\n\t\t<List\n\t\t\titemLayout='horizontal'\n\t\t\tsize='large'\n\t\t\tdataSource={current}\n\t\t\trenderItem={(item) => (\n\t\t\t\t<List.Item>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\tclassName='movie-poster'\n\t\t\t\t\t\tshape='square'\n\t\t\t\t\t\tsize={200}\n\t\t\t\t\t\tsrc={`${imgUrl + item.poster_path}`}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Title level={3}> {item.title}</Title>\n\t\t\t\t\t<Space size={[6, 6]} wrap split={<Divider type='vertical' />}>\n\t\t\t\t\t\t<Tag color='red'>{item.release_date}</Tag>\n\t\t\t\t\t\t<Tag color='red'>{item.vote_average}</Tag>\n\t\t\t\t\t\t<Tag color='red'>{item.vote_count}</Tag>\n\t\t\t\t\t</Space>\n\t\t\t\t</List.Item>\n\t\t\t)}\n\t\t/>\n\t);\n}\n\nexport default CurrentlyPlayingList;\n"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,GAAvC,EAA4CC,UAA5C,QAA8D,MAA9D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;;AAEA,SAASC,oBAAT,OAA2C;EAAA,IAAb;IAAEC;EAAF,CAAa;EAC1C,MAAM;IAAEC,KAAF;IAASC;EAAT,IAAkBN,UAAxB;EACA,MAAMO,MAAM,GAAGL,OAAO,CAACM,SAAvB;EAEA,oBACC,QAAC,IAAD;IACC,UAAU,EAAC,YADZ;IAEC,IAAI,EAAC,OAFN;IAGC,UAAU,EAAEJ,OAHb;IAIC,UAAU,EAAGK,IAAD,iBACX,QAAC,IAAD,CAAM,IAAN;MAAA,wBACC,QAAC,MAAD;QACC,SAAS,EAAC,cADX;QAEC,KAAK,EAAC,QAFP;QAGC,IAAI,EAAE,GAHP;QAIC,GAAG,EAAG,GAAEF,MAAM,GAAGE,IAAI,CAACC,WAAY;MAJnC;QAAA;QAAA;QAAA;MAAA,QADD,eAQC,QAAC,KAAD;QAAO,KAAK,EAAE,CAAd;QAAA,gBAAmBD,IAAI,CAACE,KAAxB;MAAA;QAAA;QAAA;QAAA;MAAA,QARD,eASC,QAAC,KAAD;QAAO,IAAI,EAAE,CAAC,CAAD,EAAI,CAAJ,CAAb;QAAqB,IAAI,MAAzB;QAA0B,KAAK,eAAE,QAAC,OAAD;UAAS,IAAI,EAAC;QAAd;UAAA;UAAA;UAAA;QAAA,QAAjC;QAAA,wBACC,QAAC,GAAD;UAAK,KAAK,EAAC,KAAX;UAAA,UAAkBF,IAAI,CAACG;QAAvB;UAAA;UAAA;UAAA;QAAA,QADD,eAEC,QAAC,GAAD;UAAK,KAAK,EAAC,KAAX;UAAA,UAAkBH,IAAI,CAACI;QAAvB;UAAA;UAAA;UAAA;QAAA,QAFD,eAGC,QAAC,GAAD;UAAK,KAAK,EAAC,KAAX;UAAA,UAAkBJ,IAAI,CAACK;QAAvB;UAAA;UAAA;UAAA;QAAA,QAHD;MAAA;QAAA;QAAA;QAAA;MAAA,QATD;IAAA;MAAA;MAAA;MAAA;IAAA;EALF;IAAA;IAAA;IAAA;EAAA,QADD;AAwBA;;KA5BQX,oB;AA8BT,eAAeA,oBAAf"},"metadata":{},"sourceType":"module"}